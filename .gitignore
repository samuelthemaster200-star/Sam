local Rayfield = loadstring(game:HttpGet('https://[Log in to view URL]'))()

    local Window = Rayfield:CreateWindow({
   Name = "üèàFootball Noobsüèà",
   LoadingTitle = "FootBall Noobs Script",
   LoadingSubtitle = "by B1GM3N4L1F3Z",
   ConfigurationSaving = {
      Enabled = flase,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Football Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "The Key is football",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"football"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

    local MainTab = Window:CreateTab("üèà Mag Script", nil) -- Title, Image
    local Section = MainTab:CreateSection("Main")

    Rayfield:Notify({
   Title = "Script Executed",
   Content = "Football Noobs Scripts.",
   Duration = 5,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

    local Button = MainTab:CreateButton({
   Name = "Mag Script",
   Callback = function()
local hitbox
local hitboxSize = 12 -- Adjust the size as needed
local hitboxColor = Color3.new(1, 0, 0) -- Red color
local hitboxTransparency = 0.75 -- Adjust the transparency as needed
local catchDistance = 20 -- Adjust the catch distance as needed
local notificationSent = false -- Flag to track if notification has been sent

game:GetService("RunService").RenderStepped:Connect(function()
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then return end -- Return if the character is not available

    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end -- Return if the HumanoidRootPart is not available
    
    for _, v in ipairs(game.Workspace:GetChildren()) do
        if v.Name == "Football" then
            if not v:FindFirstChild("Hitbox") then
                hitbox = Instance.new("Part")
                hitbox.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
                hitbox.CFrame = v.CFrame
                hitbox.Anchored = true
                hitbox.CanCollide = false
                hitbox.Transparency = hitboxTransparency
                hitbox.Color = hitboxColor
                hitbox.Name = "Hitbox"
                hitbox.Parent = v
            end
            if hitbox ~= nil then
                hitbox.CFrame = v.CFrame
            end
            if not v:FindFirstChild("Weld") then
                v.CanCollide = false
                v.Size = hitbox.Size

                -- Check if the player is within catch distance and moving towards the football
                if (humanoidRootPart.Position - v.Position).Magnitude <= catchDistance then
                    local playerVelocity = humanoidRootPart.Velocity
                    local ballDirection = (v.Position - humanoidRootPart.Position).unit
                    local dotProduct = playerVelocity.Unit:Dot(ballDirection)
                    local catchThreshold = 0.5 -- Adjust the threshold as needed
                    if dotProduct >= catchThreshold and not notificationSent then
                        -- Implement catch logic here
                        print("Catching the football!")
                        -- Send notification
                        game.StarterGui:SetCore("SendNotification", {
                            Title = "NEOxPEAKED on TOP!";
                            Text = "DMG on top btw Diggy sucks!";
                            Icon = "https://[Log in to view URL]"; -- You can add an icon if needed
                            Duration = 5; -- Duration of the notification in seconds
                        })
                        notificationSent = true -- Set the flag to true
                    end
                end
            else
                v.Size = Vector3.new(1, 1, 1)
            end
        end
    end
end)
   end,
})

    local Slider = MainTab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

    local Button = MainTab:CreateButton({
   Name = "InfiniteJump",
   Callback = function()
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
   end,
})

    local Button = MainTab:CreateButton({
   Name = "Fly Press X",
   Callback = function()
-- Press X to fly

local plr = game.Players.LocalPlayer
	local mouse = plr:GetMouse()

	localplayer = plr

	if workspace:FindFirstChild("Core") then
		workspace.Core:Destroy()
	end

	local Core = Instance.new("Part")
	Core.Name = "Core"
	Core.Size = Vector3.new(0.05, 0.05, 0.05)

	spawn(function()
		Core.Parent = workspace
		local Weld = Instance.new("Weld", Core)
		Weld.Part0 = Core
		Weld.Part1 = localplayer.Character.LowerTorso
		Weld.C0 = CFrame.new(0, 0, 0)
	end)

	workspace:WaitForChild("Core")

	local torso = workspace.Core
	flying = true
	local speed=10
	local keys={a=false,d=false,w=false,s=false}
	local e1
	local e2
	local function start()
		local pos = Instance.new("BodyPosition",torso)
		local gyro = Instance.new("BodyGyro",torso)
		pos.Name="EPIXPOS"
		pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
		pos.position = torso.Position
		gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		gyro.cframe = torso.CFrame
		repeat
			wait()
			localplayer.Character.Humanoid.PlatformStand=true
			local new=gyro.cframe - gyro.cframe.p + pos.position
			if not keys.w and not keys.s and not keys.a and not keys.d then
				speed=5
			end
			if keys.w then
				new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0
			end
			if keys.s then
				new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0
			end
			if keys.d then
				new = new * CFrame.new(speed,0,0)
				speed=speed+0
			end
			if keys.a then
				new = new * CFrame.new(-speed,0,0)
				speed=speed+0
			end
			if speed>10 then
				speed=5
			end
			pos.position=new.p
			if keys.w then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
			elseif keys.s then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
			else
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame
			end
		until flying == false
		if gyro then gyro:Destroy() end
		if pos then pos:Destroy() end
		flying=false
		localplayer.Character.Humanoid.PlatformStand=false
		speed=10
	end
	e1=mouse.KeyDown:connect(function(key)
		if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
		if key=="w" then
			keys.w=true
		elseif key=="s" then
			keys.s=true
		elseif key=="a" then
			keys.a=true
		elseif key=="d" then
			keys.d=true
		elseif key=="x" then
			if flying==true then
				flying=false
			else
				flying=true
				start()
			end
		end
	end)
	e2=mouse.KeyUp:connect(function(key)
		if key=="w" then
			keys.w=false
		elseif key=="s" then
			keys.s=false
		elseif key=="a" then
			keys.a=false
		elseif key=="d" then
			keys.d=false
		end
	end)
	start()
end)
   end,
})

local Button = MainTab:CreateButton({
   Name = "FF2 Scripts",
   Callback = function()
loadstring(game:HttpGet('https://[Log in to view URL]'))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Fling",
   Callback = function()
local function send(text)
	local StarterGui = game:GetService("StarterGui")
	StarterGui:SetCore("SendNotification",{
		Title = "Fling by danya23131", -- You can remove this, idc
		Text = text,
		Duration = 5
	})
end
local fakepart = Instance.new("Part", workspace)
local att1 = Instance.new("Attachment", fakepart)
local att2 = Instance.new("Attachment", game.Players.LocalPlayer.Character.HumanoidRootPart)
local body = Instance.new("AlignPosition", fakepart)
local mouse = game.Players.LocalPlayer:GetMouse()
body.Attachment0 = att2
body.Attachment1 = att1
body.RigidityEnabled = true
body.Responsiveness = math.huge
body.MaxForce = math.huge
body.MaxVelocity = math.huge
body.MaxAxesForce = Vector3.new(math.huge,math.huge,math.huge)
body.Visible = true
body.Mode = Enum.PositionAlignmentMode.TwoAttachment
game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.StrafingNoPhysics)
send("Please wait")
local oldcf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(0,40000000,0)) * CFrame.fromEulerAnglesXYZ(math.rad(180),0,0)
game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,1000000,0)
task.wait(3)
game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcf
task.wait(.2)	
local power = 100
local attack = 5
fakepart.Anchored = true
fakepart.Size = Vector3.new(5,5,5)
fakepart.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
fakepart.CanCollide = false
fakepart.Transparency = 0.5
fakepart.Material = Enum.Material.ForceField
for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
	if v:IsA("BasePart") then
		if v.Name ~= "HumanoidRootPart" then
			v.Transparency = .75
			v.Material = Enum.Material.Neon
		end
	elseif v:IsA("Decal") then
		v:Remove()
	end
end
local partic = Instance.new("ParticleEmitter", fakepart)
partic.Texture = "rbxassetid://15273937357"
partic.SpreadAngle = Vector2.new(-180,180)
partic.Rate = 45
partic.Size = NumberSequence.new(1,0)
partic.Transparency = NumberSequence.new(0.9)
partic.Lifetime = NumberRange.new(0.7,1)
partic.RotSpeed = NumberRange.new(-45,45)
workspace.CurrentCamera.CameraSubject = fakepart
spawn(function()
	while true do
		task.wait()
		for i = 0,1,0.01 do
			task.wait()
			fakepart.Color = Color3.fromHSV(i,1,1)
			partic.Color = ColorSequence.new(Color3.fromHSV(i,1,1))
		end
	end
end)
spawn(function()
	while true do
		game.Players.LocalPlayer.Character.HumanoidRootPart.AssemblyAngularVelocity = Vector3.new(math.random(-500,50),math.random(-500,500) * power,math.random(-5,5))
		task.wait(math.random(0,attack)/50)	
	end
end)
--[[

spawn(function()
	while true do
		if game.Players.LocalPlayer.Character.Humanoid.MoveDirection.Magnitude ~= 0 then
			fakepart.Position = fakepart.Position + workspace.CurrentCamera.CFrame.LookVector * 2
		end
		task.wait()
	end
end)

]]
local w = false
local a = false
local s = false
local d = false
mouse.KeyDown:Connect(function(key)
	if key == "w" then
		w = true
		--fakepart.Position = fakepart.Position + workspace.CurrentCamera.CFrame.LookVector * 2
	end
	if key == "a" then
		a = true
		--fakepart.Position = fakepart.Position - workspace.CurrentCamera.CFrame.RightVector * 2
	end
	if key == "s" then
		s = true
		--fakepart.Position = fakepart.Position - workspace.CurrentCamera.CFrame.LookVector * 2
	end
	if key == "d" then
		d = true
		--fakepart.Position = fakepart.Position + workspace.CurrentCamera.CFrame.RightVector * 2
	end
end)
mouse.KeyUp:Connect(function(key)
	if key == "w" then
		w = false
		--fakepart.Position = fakepart.Position + workspace.CurrentCamera.CFrame.LookVector * 2
	end
	if key == "a" then
		a = false
		--fakepart.Position = fakepart.Position - workspace.CurrentCamera.CFrame.RightVector * 2
	end
	if key == "s" then
		s = false
		--fakepart.Position = fakepart.Position - workspace.CurrentCamera.CFrame.LookVector * 2
	end
	if key == "d" then
		d = false
		--fakepart.Position = fakepart.Position + workspace.CurrentCamera.CFrame.RightVector * 2
	end
end)
game:GetService("RunService").Heartbeat:Connect(function()
	if w then
		fakepart.Position = fakepart.Position + workspace.CurrentCamera.CFrame.LookVector * 2
	end
	if a then
		fakepart.Position = fakepart.Position - workspace.CurrentCamera.CFrame.RightVector * 2
	end
	if s then
		fakepart.Position = fakepart.Position - workspace.CurrentCamera.CFrame.LookVector * 2
	end
	if d then
		fakepart.Position = fakepart.Position + workspace.CurrentCamera.CFrame.RightVector * 2
	end
end)
spawn(function()
	while true do
		local players = game.Players:GetPlayers()
		local closest = nil
		local shortestDistance = math.huge
		local localPlayer = game.Players.LocalPlayer
		local localRootPart = localPlayer.Character.HumanoidRootPart

		for _, player in pairs(players) do
			if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local targetRootPart = player.Character.HumanoidRootPart
				local distance = (localRootPart.Position - targetRootPart.Position).magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closest = player
				end
			end
		end

		if closest then
			local targetRootPart = closest.Character.HumanoidRootPart
			local direction = (targetRootPart.Position - localRootPart.Position).unit
			local lookAtCFrame = CFrame.lookAt(localRootPart.Position, Vector3.new(targetRootPart.Position.X,localRootPart.Position.Y,targetRootPart.Position.Z))
			localRootPart.CFrame = lookAtCFrame
		end

		fakepart.Rotation = localRootPart.Rotation
		task.wait()
	end
end)
local isdown = false
local mouse = game.Players.LocalPlayer:GetMouse()
mouse.Button1Down:Connect(function()
	isdown = true
end)
mouse.Button1Up:Connect(function()
	isdown = false
end)
game:GetService("RunService").Heartbeat:Connect(function()
	if isdown then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.Position + Vector3.new(math.random(-5,5)/5,math.random(0,8)/2,math.random(-5,5)/5)) * CFrame.fromEulerAnglesXYZ(0,math.rad(45),0)
		game.Players.LocalPlayer.Character.HumanoidRootPart.AssemblyAngularVelocity = Vector3.new(10000,9999,-9999)
		game.Players.LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(-17.7,500,17.7)
	end
end)
spawn(function()
	while true do
		game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
		task.wait(.5)
		game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
		task.wait(.5)
	end
end)
while true do
	--game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
	fakepart.Rotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
	game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
	if math.random(0,1)==1 then
		game.Players.LocalPlayer.Character.Humanoid.Jump = true
	else
		game.Players.LocalPlayer.Character.Humanoid.Jump = false
	end
	if not isdown then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = fakepart.CFrame
	end
	game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(math.random(-250,250),math.random(-500,500),math.random(-250,250))
	--game.Players.LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(math.random(-250,250),math.random(-500,500),math.random(-250,250))
	--game.Players.LocalPlayer.Character.HumanoidRootPart.AssemblyAngularVelocity = Vector3.new(0,180,0)
	task.wait()
end
   end,
})
